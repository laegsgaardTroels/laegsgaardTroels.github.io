<!doctype html>
<html lang="en">
  <head>

      <style>
        img {
          max-width: 100%;
          margin: auto;
          display: block;
        }
        figcaption {
          max-width: 100%;
          margin: auto;
          display: block;
        }
        code {
          font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
          background-color: #f5f5f5;
          padding: .2em .4em;
          font-size: 85%;
          margin: 0;
        }
        pre {
          margin: 1em 0;
          background-color: #f5f5f5;
          padding: 1em;
          overflow: auto;
        }
        pre code {
          padding: 0;
          overflow: visible;
          overflow-wrap: normal;
        }
        .sourceCode {
         background-color: #f5f5f5;
         overflow: visible;
        }
        hr {
          background-color: #1a1a1a;
          border: none;
          height: 1px;
          margin: 1em 0;
        }
        table {
          margin: 1em 0;
          border-collapse: collapse;
          width: 100%;
          overflow-x: auto;
          display: block;
          font-variant-numeric: lining-nums tabular-nums;
        }
        table caption {
          margin-bottom: 0.75em;
        }
        tbody {
          margin-top: 0.5em;
          border-top: 1px solid #1a1a1a;
          border-bottom: 1px solid #1a1a1a;
        }
        th {
          border-top: 1px solid #1a1a1a;
          padding: 0.25em 0.5em 0.25em 0.5em;
        }
        td {
          padding: 0.125em 0.5em 0.25em 0.5em;
        }
        header {
          margin-bottom: 4em;
          text-align: center;
        }
        #TOC li {
          list-style: none;
        }
        #TOC ul {
          padding-left: 1.3em;
        }
        #TOC > ul {
          padding-left: 0;
        }
        #TOC a:not(:hover) {
          text-decoration: none;
        }
        code{white-space: pre-wrap;}
        span.smallcaps{font-variant: small-caps;}
        span.underline{text-decoration: underline;}
        div.column{display: inline-block; vertical-align: top; width: 50%;}
        div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
        ul.task-list{list-style: none;}
        pre > code.sourceCode { white-space: pre; position: relative; }
        pre > code.sourceCode > span { line-height: 1.25; }
        pre > code.sourceCode > span:empty { height: 1.2em; }
        .sourceCode { overflow: visible; }
        code.sourceCode > span { color: inherit; text-decoration: inherit; }
        div.sourceCode { margin: 1em 0; }
        pre.sourceCode { margin: 0; }
        @media screen {
        div.sourceCode { overflow: auto; }
        }
        @media print {
        pre > code.sourceCode { white-space: pre-wrap; }
        pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }
        }
        pre.numberSource code
          { counter-reset: source-line 0; }
        pre.numberSource code > span
          { position: relative; left: -4em; counter-increment: source-line; }
        pre.numberSource code > span > a:first-child::before
          { content: counter(source-line);
            position: relative; left: -1em; text-align: right; vertical-align: baseline;
            border: none; display: inline-block;
            -webkit-touch-callout: none; -webkit-user-select: none;
            -khtml-user-select: none; -moz-user-select: none;
            -ms-user-select: none; user-select: none;
            padding: 0 4px; width: 4em;
            color: #aaaaaa;
          }
        pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
        div.sourceCode
          {   }
        @media screen {
        pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
        }
        code span.al { color: #ff0000; font-weight: bold; } /* Alert */
        code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
        code span.at { color: #7d9029; } /* Attribute */
        code span.bn { color: #40a070; } /* BaseN */
        code span.bu { } /* BuiltIn */
        code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
        code span.ch { color: #4070a0; } /* Char */
        code span.cn { color: #880000; } /* Constant */
        code span.co { color: #60a0b0; font-style: italic; } /* Comment */
        code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
        code span.do { color: #ba2121; font-style: italic; } /* Documentation */
        code span.dt { color: #902000; } /* DataType */
        code span.dv { color: #40a070; } /* DecVal */
        code span.er { color: #ff0000; font-weight: bold; } /* Error */
        code span.ex { } /* Extension */
        code span.fl { color: #40a070; } /* Float */
        code span.fu { color: #06287e; } /* Function */
        code span.im { color: #007020; font-weight: bold; } /* Import */
        code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
        code span.kw { color: #007020; font-weight: bold; } /* Keyword */
        code span.op { color: #666666; } /* Operator */
        code span.ot { color: #007020; } /* Other */
        code span.pp { color: #bc7a00; } /* Preprocessor */
        code span.sc { color: #4070a0; } /* SpecialChar */
        code span.ss { color: #bb6688; } /* SpecialString */
        code span.st { color: #4070a0; } /* String */
        code span.va { color: #19177c; } /* Variable */
        code span.vs { color: #4070a0; } /* VerbatimString */
        code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
      </style>
              <link rel="stylesheet" href="/assets/css/bootstrap.min.css" />
      
                <!-- Using Bootstrap starter template: https://getbootstrap.com/docs/4.0/getting-started/introduction/-->
                <!-- Required meta tags -->
                <meta charset="utf-8">
                <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

                <link rel="apple-touch-icon" sizes="180x180" href="/assets/favicon/apple-touch-icon.png">
                <link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon/favicon-32x32.png">
                <link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon/favicon-16x16.png">
                <link rel="manifest" href="/assets/favicon/site.webmanifest">

                <!-- Font Awesome CSS -->
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

                <!-- Disqus -->
                <script id="dsq-count-scr" src="//machinelearningnotes-1.disqus.com/count.js" async></script>
                      <script
                      src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml-full.js"
                      type="text/javascript"></script>
      
    <title>Haversine</title>
  </head>
  <body>

        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="/">ML-Notes</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                <div class="navbar-nav">
                    <a class="nav-link" href="/index.html"> Notes </a>
                    <a class="nav-link" href="/courses.html"> Courses </a>
                    <a class="nav-link" href="/about.html"> About </a>
                </div>
            </div>
        </nav>

    
    <div class="container">
        <br>
        <div class="page-header">
            <div class="pull-left">
                <h1>Haversine</h1>
                <strong>Distance Metric</strong>
                <div class="text-muted">2021-06-09</div>
            </div>
            
            <div class="pull-right">

                                <div class="text-right">
                    <a href="https://github.com/laegsgaardTroels/laegsgaardTroels.github.io/tree/master/src/posts/2021-06-09-haversine">
                        [<i>View source</i> <span class="fa fa-github"></span>]
                    </a>
                </div>
                
                
            </div>
            <div class="clearfix"></div>
        </div>
        

        <br>
        <div id="ceb7b7ff-26a8-46e5-a7ed-48d94b7403ef"
        class="cell markdown" data-editable="true"
        data-slideshow="{&quot;slide_type&quot;:&quot;&quot;}"
        data-tags="[]">
        <p>The haversine distance can be used to calculate the distance
        between two points on a sphere. Here is my derivation of it.
        Assume you have two points <span class="math inline">\(p_1 = (r,
        \theta_1, \varphi_1)\)</span> and <span
        class="math inline">\(p_2=(r, \theta_2, \varphi_2)\)</span> in
        spherical coordinates.</p>
        <p><span class="math inline">\(r\)</span> is the radius of the
        sphere. <span class="math inline">\(\theta_1,
        \theta_2\in(-\frac{\pi}{2}, \frac{\pi}{2}]\)</span> is the
        latitude. <span class="math inline">\(\varphi_1,
        \varphi_2\in(-\pi, \pi]\)</span> is the longitude.</p>
        <p>You can convert spherical coordinates to cartesian
        coordinates (vectors) using:</p>
        <p><span class="math display">\[
        \begin{aligned}
        x &amp;= r \cdot \cos(\theta)\cos(\varphi) \\
        y &amp;= r \cdot \cos(\theta)\sin(\varphi) \\
        z &amp;= r \cdot \sin(\theta)
        \end{aligned}
        \]</span></p>
        <p><span class="math inline">\(z = r \cdot \sin(\theta)\)</span>
        is north/south, <span class="math inline">\(x = r \cdot
        \cos(\theta)\cos(\varphi)\)</span> and <span
        class="math inline">\(y = r \cdot
        \cos(\theta)\sin(\varphi)\)</span> defines a plane orthogonal to
        north/south.</p>
        <p>Remember the dot product between two points is:</p>
        <p><span class="math display">\[
        \begin{aligned}
            v_1 \cdot v_2 = \lVert v_1 \rVert \lVert v_2 \rVert
        \cos(\angle(v_1, v_2))
        \end{aligned}
        \]</span></p>
        <p>Where <span class="math inline">\(\angle(v_1, v_2)\)</span>
        is the angle between the two vectors. Let <span
        class="math inline">\(v_1 = (x_1, y_1, z_1)^T\)</span> and <span
        class="math inline">\(v_2 = (x_2, y_2, z_2)^T\)</span> where
        <span class="math inline">\(\lVert v_1 \rVert = \lVert v_2
        \rVert = r\)</span>. You can now calculate this angle by:</p>
        <p><span class="math display">\[
        \begin{aligned}
        \angle(v_1, v_2)
        &amp;= \arccos[\frac{v_1}{\lVert v_1 \rVert} \frac{v_2}{\lVert
        v_2 \rVert}] \\
        &amp;= \arccos[\cos(\theta_1)\cos(\varphi_1)
        \cos(\theta_2)\cos(\varphi_2) +
        \cos(\theta_1)\sin(\varphi_1)\cos(\theta_2)\sin(\varphi_2) +
        \sin(\theta_1) \sin(\theta_2)]
        \end{aligned}
        \]</span></p>
        <p>You can calculate the distance between two points with angle
        <span class="math inline">\(\angle(v_1, v_2)\)</span> on a
        circle with radius <span class="math inline">\(r\)</span>
        as:</p>
        <p><span class="math display">\[
        d = r \cdot \angle(v_1, v_2)
        \]</span></p>
        <p>To show that this is the haversine:</p>
        <p><span class="math display">\[
        \begin{aligned}
        d &amp;= r \cdot \arccos[\cos(\theta_1)\cos(\varphi_1)
        \cos(\theta_2)\cos(\varphi_2) +
        \cos(\theta_1)\sin(\varphi_1)\cos(\theta_2)\sin(\varphi_2) +
        \sin(\theta_1) \sin(\theta_2)] \\
        &amp; = r \cdot \arccos[\cos(\theta_1)\cos(\theta_2)
        [\cos(\varphi_1) \cos(\varphi_2) +
        \sin(\varphi_1)\sin(\varphi_2)] + \sin(\theta_1) \sin(\theta_2)]
        \\
        &amp; = r \cdot \arccos[\cos(\theta_1)\cos(\theta_2)
        \cos(\varphi_2 - \varphi_1) + \sin(\theta_1) \sin(\theta_2)] \\
        &amp; = 2r \cdot \arcsin[(\frac{1 -[\cos(\theta_1)\cos(\theta_2)
        \cos(\varphi_2 - \varphi_1) + \sin(\theta_1)
        \sin(\theta_2)]}{2})^{0.5}] \\
        &amp; = 2r \cdot \arcsin[(\frac{1 -\cos(\theta_1)\cos(\theta_2)
        \cos(\varphi_2 - \varphi_1) - \sin(\theta_1)
        \sin(\theta_2)]}{2})^{0.5}] \\
        &amp; = 2r \cdot \arcsin[(\frac{1 -\cos(\theta_1)\cos(\theta_2)
        \cos(\varphi_2 - \varphi_1) - (\cos(\theta_2 - \theta_1) -
        \cos(\theta_1) \cos(\theta_2))}{2})^{0.5}] \\
        &amp; = 2r \cdot \arcsin[(\frac{1 -\cos(\theta_1)\cos(\theta_2)
        \cos(\varphi_2 - \varphi_1) - \cos(\theta_2 - \theta_1) +
        \cos(\theta_1) \cos(\theta_2)}{2})^{0.5}] \\
        &amp; = 2r \cdot \arcsin[(\frac{1 - \cos(\theta_2 - \theta_1) +
        \cos(\theta_1)\cos(\theta_2) (1 - \cos(\varphi_2 -
        \varphi_1))}{2})^{0.5}] \\
        &amp; = 2r \cdot \arcsin[(\sin^2(\frac{\theta_2 - \theta_2}{2})
        + \cos(\theta_1)\cos(\theta_2)\sin^2(\frac{\varphi_2 -
        \varphi_1}{2}))^{0.5}] \\
        \end{aligned}
        \]</span></p>
        <p>For the first equality we expand on the equality above. For
        the second we refactor <span
        class="math inline">\(\cos(\theta_1)\cos(\theta_2)\)</span>. For
        the third equality it is used that: <span
        class="math inline">\(\cos(\varphi_2 - \varphi_1) =
        \cos(\varphi_1) \cos(\varphi_2) +
        \sin(\varphi_1)\sin(\varphi_2)\)</span>. For the fourth we ues
        that <span
        class="math inline">\(\arccos(x)=2\arcsin[(\frac{1-x}{2})^{0.5})\)</span>.
        For the fifth we multiply <span
        class="math inline">\(-1\)</span> into the parenthesis. For the
        sixth we use <span
        class="math inline">\(\sin(\theta_1)\sin(\theta_2) =
        \cos(\theta_2 - \theta_1) - \cos(\theta_1)
        \cos(\theta_2)\)</span>. For the seventh we multiply <span
        class="math inline">\(-1\)</span> into the parenthesis. For the
        eigth we rearrange. For the eigth we use <span
        class="math inline">\(\sin^2(\frac{x}{2}) =
        \frac{1-\cos(x)}{2}\)</span></p>
        <p>The righthand side is now the haversine, see [1]. And voila
        done.</p>
        </div>
        <div id="ff175d80" class="cell markdown">
        <h2 id="example-ais-data">Example: AIS Data</h2>
        <p>Here is a small example in Python with AIS data for one
        vessel. I calculate the distance between each point and compare
        two of above calculations.</p>
        </div>
        <div id="607b43c5" class="cell code" data-execution_count="1">
        <div class="sourceCode" id="cb1"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> numpy <span class="im">as</span> np</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="co"># Radius of the earth in meters.</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>EARTH_RADIUS_METERS <span class="op">=</span> <span class="fl">6378137.00</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>ais <span class="op">=</span> np.genfromtxt(<span class="st">&#39;ais.csv&#39;</span>, delimiter<span class="op">=</span><span class="st">&#39;,&#39;</span>, names<span class="op">=</span><span class="va">True</span>) </span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> haversine(lat1, lon1, lat2, lon2):</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    lat1, lon1, lat2, lon2 <span class="op">=</span> <span class="bu">map</span>(np.radians, [lat1, lon1, lat2, lon2])</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    dlat <span class="op">=</span> lat2 <span class="op">-</span> lat1</span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    dlon <span class="op">=</span> lon2 <span class="op">-</span> lon1</span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    a <span class="op">=</span> (</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>        np.sin(dlat <span class="op">/</span> <span class="fl">2.0</span>) <span class="op">**</span> <span class="dv">2</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>        <span class="op">+</span> np.cos(lat1) <span class="op">*</span> np.cos(lat2) <span class="op">*</span> np.sin(dlon <span class="op">/</span> <span class="fl">2.0</span>) <span class="op">**</span> <span class="dv">2</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>    )</span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">2</span> <span class="op">*</span> EARTH_RADIUS_METERS <span class="op">*</span> np.arcsin(np.sqrt(a))</span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> other_haversine(lat1, lon1, lat2, lon2):</span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>    lat1, lon1, lat2, lon2 <span class="op">=</span> <span class="bu">map</span>(np.radians, [lat1, lon1, lat2, lon2])</span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>    x1, y1, z1 <span class="op">=</span> xyz(lat1, lon1)</span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>    x2, y2, z2 <span class="op">=</span> xyz(lat2, lon2)</span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>    theta <span class="op">=</span> np.arccos(x1 <span class="op">*</span> x2 <span class="op">+</span> y1 <span class="op">*</span> y2 <span class="op">+</span> z1 <span class="op">*</span> z2)</span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> theta <span class="op">*</span> EARTH_RADIUS_METERS</span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> xyz(lat, lon):</span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>    x <span class="op">=</span> np.cos(lat) <span class="op">*</span> np.cos(lon)</span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>    y <span class="op">=</span> np.cos(lat) <span class="op">*</span> np.sin(lon)</span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>    z <span class="op">=</span> np.sin(lat)</span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> x, y, z </span></code></pre></div>
        </div>
        <div id="6f1bc271" class="cell markdown">
        <p>They're equal up to 1 cm e.g. 0.01 meter.</p>
        </div>
        <div id="df1098e3" class="cell code" data-execution_count="2">
        <div class="sourceCode" id="cb2"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>lat1 <span class="op">=</span> ais[<span class="st">&#39;latitude&#39;</span>][<span class="dv">1</span>:]</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>lon1 <span class="op">=</span> ais[<span class="st">&#39;longitude&#39;</span>][<span class="dv">1</span>:]</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>lat2 <span class="op">=</span> ais[<span class="st">&#39;latitude&#39;</span>][:<span class="op">-</span><span class="dv">1</span>]</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>lon2 <span class="op">=</span> ais[<span class="st">&#39;longitude&#39;</span>][:<span class="op">-</span><span class="dv">1</span>]</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>np.<span class="bu">all</span>(np.<span class="bu">abs</span>(other_haversine(lat1, lon1, lat2, lon2) <span class="op">-</span> haversine(lat1, lon1, lat2, lon2)) <span class="op">&lt;</span> <span class="fl">0.01</span>)</span></code></pre></div>
        <div class="output execute_result" data-execution_count="2">
        <pre><code>True</code></pre>
        </div>
        </div>
        <div id="6ebcb34f" class="cell markdown">
        <h1 id="references">References</h1>
        <p>[1] <a href="https://en.wikipedia.org/wiki/Haversine_formula"
        class="uri">https://en.wikipedia.org/wiki/Haversine_formula</a></p>
        <p>[2] <a href="https://en.wikipedia.org/wiki/Circular_arc"
        class="uri">https://en.wikipedia.org/wiki/Circular_arc</a></p>
        </div>
        <br>
        <br>

                <!--- Disqus --->
                <div id="disqus_thread"></div>
                <script>
                    /**
                    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
                         *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables    */
                    /*
                   var disqus_config = function () {
                   this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
                   this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
                   };
                         */
                    (function() { // DON'T EDIT BELOW THIS LINE
                            var d = document, s = d.createElement('script');
                            s.src = 'https://machinelearningnotes-1.disqus.com/embed.js';
                            s.setAttribute('data-timestamp', +new Date());
                            (d.head || d.body).appendChild(s);
                        })();
                </script>
                <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>                
    </div>


    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>    
  </body>
</html>
