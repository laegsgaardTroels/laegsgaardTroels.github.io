<!doctype html>
<html lang="en">

<head>

    <style>
        img {
          max-width: 100%;
          margin: auto;
          display: block;
        }
        figcaption {
          max-width: 100%;
          margin: auto;
          display: block;
        }
        code {
          font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
          background-color: #f5f5f5;
          padding: .2em .4em;
          font-size: 85%;
          margin: 0;
        }
        pre {
          margin: 1em 0;
          background-color: #f5f5f5;
          padding: 1em;
          overflow: auto;
        }
        pre code {
          padding: 0;
          overflow: visible;
          overflow-wrap: normal;
        }
        .sourceCode {
         background-color: #f5f5f5;
         overflow: visible;
        }
        hr {
          background-color: #1a1a1a;
          border: none;
          height: 1px;
          margin: 1em 0;
        }
        table {
          margin: 1em 0;
          border-collapse: collapse;
          width: 100%;
          overflow-x: auto;
          display: block;
          font-variant-numeric: lining-nums tabular-nums;
        }
        table caption {
          margin-bottom: 0.75em;
        }
        tbody {
          margin-top: 0.5em;
          border-top: 1px solid #1a1a1a;
          border-bottom: 1px solid #1a1a1a;
        }
        th {
          border-top: 1px solid #1a1a1a;
          padding: 0.25em 0.5em 0.25em 0.5em;
        }
        td {
          padding: 0.125em 0.5em 0.25em 0.5em;
        }
        header {
          margin-bottom: 4em;
          text-align: center;
        }
        #TOC li {
          list-style: none;
        }
        #TOC ul {
          padding-left: 1.3em;
        }
        #TOC > ul {
          padding-left: 0;
        }
        #TOC a:not(:hover) {
          text-decoration: none;
        }
        code{white-space: pre-wrap;}
        span.smallcaps{font-variant: small-caps;}
        span.underline{text-decoration: underline;}
        div.column{display: inline-block; vertical-align: top; width: 50%;}
        div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
        ul.task-list{list-style: none;}
        pre > code.sourceCode { white-space: pre; position: relative; }
        pre > code.sourceCode > span { line-height: 1.25; }
        pre > code.sourceCode > span:empty { height: 1.2em; }
        .sourceCode { overflow: visible; }
        code.sourceCode > span { color: inherit; text-decoration: inherit; }
        div.sourceCode { margin: 1em 0; }
        pre.sourceCode { margin: 0; }
        @media screen {
        div.sourceCode { overflow: auto; }
        }
        @media print {
        pre > code.sourceCode { white-space: pre-wrap; }
        pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }
        }
        pre.numberSource code
          { counter-reset: source-line 0; }
        pre.numberSource code > span
          { position: relative; left: -4em; counter-increment: source-line; }
        pre.numberSource code > span > a:first-child::before
          { content: counter(source-line);
            position: relative; left: -1em; text-align: right; vertical-align: baseline;
            border: none; display: inline-block;
            -webkit-touch-callout: none; -webkit-user-select: none;
            -khtml-user-select: none; -moz-user-select: none;
            -ms-user-select: none; user-select: none;
            padding: 0 4px; width: 4em;
            color: #aaaaaa;
          }
        pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
        div.sourceCode
          {   }
        @media screen {
        pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
        }
        code span.al { color: #ff0000; font-weight: bold; } /* Alert */
        code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
        code span.at { color: #7d9029; } /* Attribute */
        code span.bn { color: #40a070; } /* BaseN */
        code span.bu { } /* BuiltIn */
        code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
        code span.ch { color: #4070a0; } /* Char */
        code span.cn { color: #880000; } /* Constant */
        code span.co { color: #60a0b0; font-style: italic; } /* Comment */
        code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
        code span.do { color: #ba2121; font-style: italic; } /* Documentation */
        code span.dt { color: #902000; } /* DataType */
        code span.dv { color: #40a070; } /* DecVal */
        code span.er { color: #ff0000; font-weight: bold; } /* Error */
        code span.ex { } /* Extension */
        code span.fl { color: #40a070; } /* Float */
        code span.fu { color: #06287e; } /* Function */
        code span.im { color: #007020; font-weight: bold; } /* Import */
        code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
        code span.kw { color: #007020; font-weight: bold; } /* Keyword */
        code span.op { color: #666666; } /* Operator */
        code span.ot { color: #007020; } /* Other */
        code span.pp { color: #bc7a00; } /* Preprocessor */
        code span.sc { color: #4070a0; } /* SpecialChar */
        code span.ss { color: #bb6688; } /* SpecialString */
        code span.st { color: #4070a0; } /* String */
        code span.va { color: #19177c; } /* Variable */
        code span.vs { color: #4070a0; } /* VerbatimString */
        code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
    </style>
        <link rel="stylesheet" href="/assets/css/bootstrap.min.css" />
    
        <!-- Using Bootstrap starter template: https://getbootstrap.com/docs/4.0/getting-started/introduction/-->
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <link rel="apple-touch-icon" sizes="180x180" href="/assets/favicon/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon/favicon-16x16.png">
        <link rel="manifest" href="/assets/favicon/site.webmanifest">

        <!-- Font Awesome CSS -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

        <!-- Disqus -->
        <script id="dsq-count-scr" src="//machinelearningnotes-1.disqus.com/count.js" async></script>
        
    <title>Python Projects</title>
</head>

<body>

        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="/">ML-Notes</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                <div class="navbar-nav">
                    <a class="nav-link" href="/index.html"> Notes </a>
                    <a class="nav-link" href="/courses.html"> Courses </a>
                    <a class="nav-link" href="/about.html"> About </a>
                </div>
            </div>
        </nav>

    
    <div class="container">
        <br>
        <div class="page-header">
            <div class="pull-left">
                <h1>Python Projects</h1>
                <strong>Python</strong>
                <div class="text-muted">2024-03-03</div>
            </div>

            <div class="pull-right">

                                <div class="text-right">
                    <a href="https://github.com/laegsgaardTroels/laegsgaardTroels.github.io/tree/master/src/posts/2024-03-03-python-project">
                        [<i>View source</i> <span class="fa fa-github"></span>]
                    </a>
                </div>
                
                
            </div>
            <div class="clearfix"></div>
        </div>


        <br>
        <div id="37e31df1-1c13-42df-bc78-646e18931976"
        class="cell markdown">
        <h2 id="virtual-environment">Virtual environment</h2>
        </div>
        <div id="3f28d0e7-b8aa-4fe3-900f-7e2c2a183ca8" class="cell code"
        data-execution_count="8">
        <div class="sourceCode" id="cb1"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="op">!</span>tree .</span></code></pre></div>
        <div class="output stream stdout">
        <pre><code>.
├── README.md
├── foo
│   ├── __init__.py
│   ├── __pycache__
│   │   ├── __init__.cpython-39.pyc
│   │   └── mappings.cpython-39.pyc
│   └── mappings.py
├── python_project.ipynb
├── python_project.md
├── python_project.yaml
└── setup.py

3 directories, 9 files
</code></pre>
        </div>
        </div>
        <div id="f8d7ed9b-256d-4e82-88f0-e79070eccca7"
        class="cell markdown">
        <p>Install the virtual environment.</p>
        </div>
        <div id="9c4b76a2-03c0-4a1e-855e-826f3c88842b" class="cell code"
        data-execution_count="10">
        <div class="sourceCode" id="cb3"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="op">%%</span>sh</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>python <span class="op">-</span>m venv venv</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>source venv<span class="op">/</span><span class="bu">bin</span><span class="op">/</span>activate</span></code></pre></div>
        </div>
        <div id="7056e4b8-e42d-4c75-9921-a9c4fe69dea5"
        class="cell markdown">
        <p>Then we install the package in editable mode. This enables us
        to edit the package on the fly without the need to reinstall
        it.</p>
        <p>The <code>-e</code> flag installs the module in editable
        mode, meaning that you can modify your source code in
        <code>foo/</code> and have the changes take effect without you
        having to rebuild and reinstall, see [3].</p>
        <div class="sourceCode" id="cb4"><pre
        class="sourceCode bash"><code class="sourceCode bash"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="ex">~$</span> pip install <span class="at">-h</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="ex">-e,</span> <span class="at">--editable</span> <span class="op">&lt;</span>path/url<span class="op">&gt;</span>   Install a project in editable mode <span class="er">(</span><span class="ex">i.e.</span> setuptools <span class="st">&quot;develop mode&quot;</span><span class="kw">)</span> <span class="ex">from</span> a local project path or a VCS url.</span></code></pre></div>
        </div>
        <div id="16500d94-08bd-4998-a54e-05109e037f66"
        class="cell code">
        <div class="sourceCode" id="cb5"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="op">%%</span>sh</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>pip install <span class="op">-</span>e .</span></code></pre></div>
        </div>
        <div id="8c1da2e5-7178-48ad-a956-b16d515d5b53"
        class="cell markdown" data-tags="[]">
        <h2 id="jupyter-magic">Jupyter magic</h2>
        <p><code>autoreload</code> is an IPython extension to reload
        modules before executing user code.</p>
        <p><code>autoreload</code> reloads modules automatically before
        entering the execution of code typed at the IPython prompt.</p>
        <p>This makes for example the following workflow possible:</p>
        </div>
        <div id="be50e7f2-0afb-40b2-96d8-d33a1c46e846" class="cell code"
        data-execution_count="1">
        <div class="sourceCode" id="cb6"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="op">%</span>load_ext autoreload</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="op">%</span>autoreload <span class="dv">2</span></span></code></pre></div>
        </div>
        <div id="d081edff-0512-4cb3-b3bc-15f1e988d815" class="cell code"
        data-execution_count="2">
        <div class="sourceCode" id="cb7"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="op">%%</span>writefile foo<span class="op">/</span>mappings.py</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> some_function() <span class="op">-&gt;</span> <span class="bu">float</span>:</span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">42</span> </span></code></pre></div>
        <div class="output stream stdout">
        <pre><code>Overwriting foo/mappings.py
</code></pre>
        </div>
        </div>
        <div id="fa7b61b5-dd6a-41c4-9aff-9914a5d9cf2c" class="cell code"
        data-execution_count="3">
        <div class="sourceCode" id="cb9"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="im">from</span> foo <span class="im">import</span> mappings</span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>mappings.some_function()</span></code></pre></div>
        <div class="output execute_result" data-execution_count="3">
        <pre><code>42</code></pre>
        </div>
        </div>
        <div id="508e6ec5-19b2-4a6d-b459-b64516661829"
        class="cell markdown">
        <p>Now if we change <code>some_function</code> to return 43.</p>
        </div>
        <div id="9298bf41-f961-41d7-8a1d-1d5d69107a0c" class="cell code"
        data-execution_count="4">
        <div class="sourceCode" id="cb11"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="op">%%</span>writefile foo<span class="op">/</span>mappings.py</span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> some_function() <span class="op">-&gt;</span> <span class="bu">float</span>:</span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">43</span></span></code></pre></div>
        <div class="output stream stdout">
        <pre><code>Overwriting foo/mappings.py
</code></pre>
        </div>
        </div>
        <div id="f9d51111-f8c8-452c-be10-4f2dd328fd6b"
        class="cell markdown">
        <p>And we call it again then.</p>
        </div>
        <div id="731465ba-8ad3-4701-b951-6d424437f4d9" class="cell code"
        data-execution_count="5">
        <div class="sourceCode" id="cb13"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a>mappings.some_function()</span></code></pre></div>
        <div class="output execute_result" data-execution_count="5">
        <pre><code>43</code></pre>
        </div>
        </div>
        <div id="b47ceddf-cb05-4886-80ad-898094dc5470"
        class="cell markdown">
        <p>The module was reloaded without reloading it explicitly, and
        the object imported with
        <code>from foo import some_function</code> was also updated.</p>
        </div>
        <div id="4a6b5729-7aac-4e3e-8561-5ea0dce84e6c"
        class="cell markdown">
        <h2 id="testing">Testing</h2>
        <p>Often used tools for testing in Python are
        <code>pytest</code> (most common) and <code>unittest</code>.</p>
        </div>
        <div id="21ff65c9-90cf-4c19-a2f9-1916d1d46b9f"
        class="cell markdown">
        <h2 id="type-checking">Type Checking</h2>
        <p>Often used are <code>pyright</code>.</p>
        </div>
        <div id="307f40f5-16b0-429b-8e10-f5c2be46fe0f"
        class="cell markdown">
        <h2 id="code-style-formatter">Code style formatter</h2>
        <p>Often used are <code>flake8</code> or for automatic code
        formatting people often use <code>black</code>.</p>
        </div>
        <div id="9d962b33-b2f7-4e15-9b5e-97a1cad56c52"
        class="cell markdown">
        <h2 id="pre-commit-hooks">Pre-commit hooks</h2>
        <p><a href="https://pre-commit.com">pre-commit</a> is often used
        to run a series of checks before making commits to git e.g.
        black code formatting pyright etc.</p>
        </div>
        <div id="0db48398-0021-4554-96e3-4bb175413d1a"
        class="cell markdown">
        <h2 id="logging">Logging</h2>
        <p>Logging is a nice debugging tool in Python. <!--more--> A
        mimimal example would be:</p>
        </div>
        <div id="3b23667b-835a-45e5-ab79-2d99e8526bca" class="cell code"
        data-execution_count="60">
        <div class="sourceCode" id="cb15"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb15-1"><a href="#cb15-1" aria-hidden="true" tabindex="-1"></a><span class="op">%%</span>writefile foo<span class="op">/</span>downloader.py</span>
<span id="cb15-2"><a href="#cb15-2" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> logging</span>
<span id="cb15-3"><a href="#cb15-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-4"><a href="#cb15-4" aria-hidden="true" tabindex="-1"></a>FILES <span class="op">=</span> [<span class="st">&#39;foo&#39;</span>, <span class="st">&#39;bar&#39;</span>]</span>
<span id="cb15-5"><a href="#cb15-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-6"><a href="#cb15-6" aria-hidden="true" tabindex="-1"></a>logger <span class="op">=</span> logging.getLogger(<span class="va">__name__</span>)</span>
<span id="cb15-7"><a href="#cb15-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-8"><a href="#cb15-8" aria-hidden="true" tabindex="-1"></a>  </span>
<span id="cb15-9"><a href="#cb15-9" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> download_all():</span>
<span id="cb15-10"><a href="#cb15-10" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> filename <span class="kw">in</span> FILES:</span>
<span id="cb15-11"><a href="#cb15-11" aria-hidden="true" tabindex="-1"></a>        download_file(filename)</span>
<span id="cb15-12"><a href="#cb15-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-13"><a href="#cb15-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-14"><a href="#cb15-14" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> download_file(filename):</span>
<span id="cb15-15"><a href="#cb15-15" aria-hidden="true" tabindex="-1"></a>    logger.info(<span class="ss">f&#39;Beginning download of </span><span class="sc">{</span>filename<span class="sc">}</span><span class="ss">&#39;</span>)</span></code></pre></div>
        <div class="output stream stdout">
        <pre><code>Overwriting foo/downloader.py
</code></pre>
        </div>
        </div>
        <div id="23779144-8669-4a7a-9d7e-352f465635d5"
        class="cell markdown">
        <p>The loggers are instantiated using
        <code>logging.getLogger(__name__)</code> in each script. You can
        then configure the log in a main script using
        <code>logging.basicConfig(...)</code>.</p>
        </div>
        <div id="8d622631-790e-4ebd-8fae-0fd73f9c18e1" class="cell code"
        data-execution_count="61">
        <div class="sourceCode" id="cb17"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb17-1"><a href="#cb17-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> logging </span>
<span id="cb17-2"><a href="#cb17-2" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> sys</span>
<span id="cb17-3"><a href="#cb17-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb17-4"><a href="#cb17-4" aria-hidden="true" tabindex="-1"></a>logging.basicConfig(</span>
<span id="cb17-5"><a href="#cb17-5" aria-hidden="true" tabindex="-1"></a>    <span class="bu">format</span><span class="op">=</span><span class="st">&#39;</span><span class="sc">%(asctime)s</span><span class="st"> - </span><span class="sc">%(message)s</span><span class="st">&#39;</span>,</span>
<span id="cb17-6"><a href="#cb17-6" aria-hidden="true" tabindex="-1"></a>    stream<span class="op">=</span>sys.stdout,</span>
<span id="cb17-7"><a href="#cb17-7" aria-hidden="true" tabindex="-1"></a>    level<span class="op">=</span>logging.INFO,</span>
<span id="cb17-8"><a href="#cb17-8" aria-hidden="true" tabindex="-1"></a>    datefmt<span class="op">=</span><span class="st">&#39;</span><span class="sc">%d</span><span class="st">-%b-%y %H:%M:%S&#39;</span>,</span>
<span id="cb17-9"><a href="#cb17-9" aria-hidden="true" tabindex="-1"></a>    force<span class="op">=</span><span class="va">True</span></span>
<span id="cb17-10"><a href="#cb17-10" aria-hidden="true" tabindex="-1"></a>)</span></code></pre></div>
        </div>
        <div id="84b59178-1a63-4240-a79f-a7d774802f9e" class="cell code"
        data-execution_count="63">
        <div class="sourceCode" id="cb18"><pre
        class="sourceCode python"><code class="sourceCode python"><span id="cb18-1"><a href="#cb18-1" aria-hidden="true" tabindex="-1"></a><span class="im">from</span> foo <span class="im">import</span> downloader</span>
<span id="cb18-2"><a href="#cb18-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb18-3"><a href="#cb18-3" aria-hidden="true" tabindex="-1"></a>downloader.download_all()</span></code></pre></div>
        <div class="output stream stdout">
        <pre><code>03-Mar-24 12:14:09 - Beginning download of foo
03-Mar-24 12:14:09 - Beginning download of bar
</code></pre>
        </div>
        </div>
        <div id="ff749fa9-9b74-4e34-b65e-deeaa45901ed"
        class="cell markdown">
        <h1 id="references">References</h1>
        <p>[1] <a
        href="https://pip.pypa.io/en/latest/cli/pip_install/#editable-installs"
        class="uri">https://pip.pypa.io/en/latest/cli/pip_install/#editable-installs</a></p>
        <p>[2] <a
        href="https://ipython.org/ipython-doc/3/config/extensions/autoreload.html"
        class="uri">https://ipython.org/ipython-doc/3/config/extensions/autoreload.html</a></p>
        <p>[3] <a
        href="https://setuptools.readthedocs.io/en/latest/userguide/quickstart.html#development-mode"
        class="uri">https://setuptools.readthedocs.io/en/latest/userguide/quickstart.html#development-mode</a></p>
        </div>
        <br>

                <h2>Comments</h2>
        <p>Feel free to comment here below. A Github account is required.</p>
        <!--- giscus --->
        <script src="https://giscus.app/client.js"
                data-repo="laegsgaardTroels/laegsgaardTroels.github.io"
                data-repo-id="MDEwOlJlcG9zaXRvcnkxNTY1ODk1OTk="
                data-category="Announcements"
                data-category-id="DIC_kwDOCVVeH84CcvCA"
                data-mapping="url"
                data-strict="0"
                data-reactions-enabled="1"
                data-emit-metadata="0"
                data-input-position="top"
                data-theme="light"
                data-lang="en"
                crossorigin="anonymous"
                async>
        </script>        
        <br>

    </div>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
</body>

</html>
